k8 installation on ubuntu servers in AWS:
=========================================

Step 1 (run the below commands on all the nodes)
---------------------------------------------------

# sudo hostnamectl set-hostname k8-worker1

# sudo vi /etc/hosts

Enter the private IP addresses of all the nodes which you want to make them as cluster. for example 

172.31.9.228 k8-master
172.31.1.180 k8-worker1
172.31.15.233 k8-worker2
 
Logout of the servers and then log back in to see the hostname changes 

On all nodes, set up containerd. You will need to load some kernel modules and modify some system settings as part of this process.
----------------------------------------------------------------------------------------------------------------------------------------

# cat << EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF

# sudo modprobe overlay

# sudo modprobe br_netfilter

# cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

# sudo sysctl --system 

Noe install containerd
---------------------------- 

# sudo apt-get update && sudo apt-get install -y containerd

# sudo mkdir -p /etc/containerd

# sudo containerd config default | sudo tee /etc/containerd/config.toml

# sudo systemctl restart containerd

On all nodes, disable swap
-----------------------------

# sudo swapoff -a

On all nodes, install kubeadm, kubelet, and kubectl
-------------------------------------------------------

# sudo apt-get update && sudo apt-get install -y apt-transport-https curl

# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

# cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

# sudo apt-get update

# sudo apt-get install -y kubelet=1.24.0-00 kubeadm=1.24.0-00 kubectl=1.24.0-00

# sudo apt-mark hold kubelet kubeadm kubectl

On the control plane node only, initialize the cluster and set up kubectl access
-------------------------------------------------------------------------------------

# sudo kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.24.0

# mkdir -p $HOME/.kube

# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

# sudo chown $(id -u):$(id -g) $HOME/.kube/config

Verify the cluster is working
--------------------------------

# kubectl get nodes

# kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

Get the join command (this command is also printed during kubeadm init . Feel free to simply copy it from there)
---------------------------------------------------------------------------------------------------------------------

# kubeadm token create --print-join-command



















































































































































































